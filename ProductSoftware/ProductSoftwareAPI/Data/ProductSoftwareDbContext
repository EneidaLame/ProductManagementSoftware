using Microsoft.EntityFrameworkCore;
using ProductSoftwareAPI.Entities;

namespace ProductSoftwareAPI.Data
{
    public class	ProductSoftwareDbContext: DbContext 
    {
        public ProductSoftwareDbContext(DbContextOptions<ProductSoftwareDbContext> options) :base(options)
        {

        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

			//Products
			//Monitors
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 1,
				Name = "Monitor",
				Description = "Acer Monitors",
				ImageUrl = "/Images/Monitors/1.png",
				Price = 200,
				Qty = 10,
				CategoryId = 1

			});
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 2,
				Name = "Monitor",
				Description = "Omen Monitors",
				ImageUrl = "/Images/Monitors/2.png",
				Price = 400,
				Qty = 45,
				CategoryId = 1

			});
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 3,
				Name = "Monitor",
				Description = "Gaiming Monitor",
				ImageUrl = "/Images/Monitors/3.jpg",
				Price = 200,
				Qty = 30,
				CategoryId = 1

			});
			//Desktop
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 4,
				Name = "Desktop",
				Description = "Desktop",
				ImageUrl = "/Images/Desktop/1.jpg",
				Price = 1000,
				Qty = 120,
				CategoryId = 2

			});
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 5,
				Name = "Desktop",
				Description = "Desktop",
				ImageUrl = "/Images/Desktop/2.jpeg",
				Price = 400,
				Qty = 200,
				CategoryId = 2

			});
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 6,
				Name = "Desktop",
				Description = "Desktop",
				ImageUrl = "/Images/Desktop/3.jpeg",
				Price = 600,
				Qty = 300,
				CategoryId = 2

			});
			//Laptops
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 7,
				Name = "Laptop",
				Description = "Laptop",
				ImageUrl = "/Images/Laptops/1.jpeg",
				Price = 500,
				Qty = 212,
				CategoryId = 3
			});

			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 8,
				Name = "Laptop",
				Description = "Laptop",
				ImageUrl = "/Images/Laptops/2.jpg",
				Price = 760,
				Qty = 112,
				CategoryId = 3
			});
			modelBuilder.Entity<Product>().HasData(new Product
			{
				Id = 9,
				Name = "Laptop",
				Description = "Laptop",
				ImageUrl = "/Images/Laptops/3.jpeg",
				Price = 700,
				Qty = 90,
				CategoryId = 3
			});
			//Add users
			modelBuilder.Entity<User>().HasData(new User
			{
				Id = 1,
				UserName = "Maria"

			});
			modelBuilder.Entity<User>().HasData(new User
			{
				Id = 2,
				UserName = "Xristina"

			});

			//Create Shopping Cart for Users
			modelBuilder.Entity<Cart>().HasData(new Cart
			{
				Id = 1,
				UserId = 1

			});
			modelBuilder.Entity<Cart>().HasData(new Cart
			{
				Id = 2,
				UserId = 2

			});
			//Add Product Categories
			modelBuilder.Entity<ProductCategory>().HasData(new ProductCategory
			{
				Id = 1,
				Name = "Monitors"
			});
			modelBuilder.Entity<ProductCategory>().HasData(new ProductCategory
			{
				Id = 2,
				Name = "Desktops"
			});
			modelBuilder.Entity<ProductCategory>().HasData(new ProductCategory
			{
				Id = 3,
				Name = "Laptops"
			});
		}

        public DbSet<Cart> Carts { get; set; }
        public DbSet<CartItem> CartItems { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductCategory> ProductCategories { get; set; }
        public DbSet<User> Users { get; set; }

    }
}
