@implements IDisposable
@inject IShoppingCartService shoppingCartService


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Product Software</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink  class="nav-link" href="DisplayDesktop">
                <span class="bi bi-battery" aria-hidden="true"></span>Desktop
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Monitors">
                <span class="oi oi-monitor" aria-hidden="true"></span> Monitors
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Laptops">
                <span class="oi oi-laptop" aria-hidden="true"></span> Laptops
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ShoppingCart">
                <span class="oi oi-cart" aria-hidden="true"></span>&nbsp;Cart (<b>@ShoppingCartItemsCount</b>)
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int ShoppingCartItemsCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    private void ShoppingCartChanged(int totalQty)
    {
        ShoppingCartItemsCount = totalQty;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }

    
}